server {
       listen 80 default_server;
#      listen 443 default_server ssl;
       listen [::]:80 default_server;
   #    return 301 http://$host$request_uri;


       # root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        server_name _;

                location ~ /\.well-known/acme-challenge/ {
                allow all;
                root /var/www/letsencrypt;
                try_files $uri =404;
                break;

        }
}

# Owncloud Page

server {
    listen 443 ssl;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    ssl on;
    server_name owncloud.simonaundalessandro.ch www.owncloud.simonaundalessandro.ch;
    ssl_certificate     /etc/letsencrypt/live/owncloud.simonaundalessandro.ch-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/owncloud.simonaundalessandro.ch-0002/privkey.pem;location  ~ /.well-known {
            root /var/www/letsencrypt;
            allow all;
    }

        if ($allowed_country = no) {
            return 444;
        }


location / {
            proxy_pass http://192.168.1.62/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
	    proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

    }
}

# Hochzeitspage

server {
    listen 443 default_server ssl;
    ssl on;
    server_name simonaundalessandro.ch www.simonaundalessandro.ch;
    ssl_certificate     /etc/letsencrypt/live/simonaundalessandro.ch-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/simonaundalessandro.ch-0002/privkey.pem;location ~ /.well-known {
            root /var/www/letsencrypt;
            allow all;
    }

        if ($allowed_country = no) {
            return 444;
        }


location / {
            proxy_pass http://192.168.1.203/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
    }

}


# Eat Page

server {
 #   listen 80;
    listen 443 ssl;
    ssl on;
    server_name eat.simonaundalessandro.ch www.eat.simonaundalessandro.ch;
    ssl_certificate     /etc/letsencrypt/live/eat.simonaundalessandro.ch-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/eat.simonaundalessandro.ch-0002/privkey.pem;location ~ /.well-known{
            root /var/www/letsencrypt;
            allow all;
   }

        if ($allowed_country = no) {
            return 444;
        }


location / {
            proxy_pass http://192.168.1.203/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
    }

}



# QNAP LOGIN

server {
    listen 443 ssl;
    ssl on;
    server_name nas.simonaundalessandro.ch www.nas.simonaundalessandro.ch;
    ssl_certificate     /etc/letsencrypt/live/nas.simonaundalessandro.ch-0002/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/nas.simonaundalessandro.ch-0002/privkey.pem;location ~ /.well-known {
            root /var/www/letsencrypt;
            allow all;
    }

        if ($allowed_country = no) {
            return 444;
        }


location / {
            proxy_pass https://192.168.1.31/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            auth_basic "Private Property";
            auth_basic_user_file /etc/nginx/.htpasswd;
    }

}
